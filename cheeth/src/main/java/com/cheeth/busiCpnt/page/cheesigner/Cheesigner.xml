<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cheesigner">

  <select id="getCnt01" parameterType="map" resultType="java.lang.Integer">
  <![CDATA[
    /* cheesigner.getCnt01 */
  ]]>
    SELECT COUNT(A.USER_ID) AS CNT
      FROM TB_USER_INFO A
      LEFT OUTER JOIN TB_USER_INFO_DTL B
        ON A.USER_ID = B.USER_ID
     WHERE A.USER_TYPE_CD = '3'
     <if test="isNotEmpty(SEARCH_PROJECT_CD)">
       AND ( B.PROJECT_CD_1 = #{SEARCH_PROJECT_CD} OR
             B.PROJECT_CD_2 = #{SEARCH_PROJECT_CD} OR
             B.PROJECT_CD_3 = #{SEARCH_PROJECT_CD} OR
             B.PROJECT_CD_4 = #{SEARCH_PROJECT_CD} OR
             B.PROJECT_CD_5 = #{SEARCH_PROJECT_CD} OR
             B.PROJECT_CD_6 = #{SEARCH_PROJECT_CD} OR
             B.PROJECT_CD_7 = #{SEARCH_PROJECT_CD} OR
             B.PROJECT_CD_8 = #{SEARCH_PROJECT_CD} )
     </if>
     <if test="isNotEmpty(SEARCH_TXT)">
       AND A.USER_NICK_NAME LIKE CONCAT('%', #{SEARCH_TXT}, '%')
     </if>
  </select>

  <select id="getList01" parameterType="map" resultType="hashmap">
  <![CDATA[
    /* cheesigner.getList01 */
  ]]>
    SELECT B.*
      FROM ( SELECT CAST(FORMAT(@ROWNUM := @ROWNUM + 1, 0) AS UNSIGNED) AS RN
                  , A.USER_ID
                  , A.USER_NM
                  , A.USER_NICK_NAME
                  , @ESTIMATOR_CNT := ( SELECT COUNT(ESTIMATOR_NO)
                                          FROM TB_ESTIMATOR
                                         WHERE CREATE_ID = A.USER_ID
                                      ) AS ESTIMATOR_CNT
                  , @COMPLETE_CNT := ( SELECT COUNT(WR_NO)
                                         FROM TB_WRITTEN_REQUEST
                                        WHERE CONTRACT_NO IN ( SELECT CONTRACT_NO
                                                                 FROM TB_ELECTRONIC_CONTRACT
                                                                WHERE ESTIMATOR_NO IN ( SELECT ESTIMATOR_NO
                                                                                          FROM TB_ESTIMATOR
                                                                                         WHERE CREATE_ID = A.USER_ID ) )
                                          AND FILE_RECEIVE_YN = 'Y'
                                     ) AS COMPLETE_CNT
                  , ( SELECT FORMAT(IFNULL(SUM(LAST_AMOUNT), 0), 0)
                        FROM TB_WRITTEN_REQUEST
                       WHERE CONTRACT_NO IN ( SELECT CONTRACT_NO
                                                FROM TB_ELECTRONIC_CONTRACT
                                               WHERE ESTIMATOR_NO IN ( SELECT ESTIMATOR_NO
                                                                         FROM TB_ESTIMATOR
                                                                        WHERE CREATE_ID = A.USER_ID ) )
                         AND FILE_RECEIVE_YN = 'Y'
                    ) AS COMPLETE_AMOUNT
                  , IFNULL(ROUND((@COMPLETE_CNT / @ESTIMATOR_CNT * 100 )), 0) AS COMPLETE_RATIO
                  , ( SELECT IFNULL(ROUND(SUM(SCORE)/COUNT(1)),0) AS SOCRE_AVG
                        FROM TB_REVIEW
                       WHERE PROJECT_NO IN ( SELECT PROJECT_NO
                                               FROM TB_ELECTRONIC_CONTRACT
                                              WHERE CHEESIGNER_ID  = A.USER_ID ) ) AS SCORE_AVG
               FROM TB_USER_INFO A
               LEFT OUTER JOIN TB_USER_INFO_DTL B
                 ON A.USER_ID = B.USER_ID
                  , (SELECT @ESTIMATOR_CNT := 0, @COMPLETE_CNT := 0) V_TB
                  , (SELECT @ROWNUM := 0) RN_TB
              WHERE A.USER_TYPE_CD = '3'
              <if test="isNotEmpty(SEARCH_PROJECT_CD)">
                AND ( B.PROJECT_CD_1 = #{SEARCH_PROJECT_CD} OR
                      B.PROJECT_CD_2 = #{SEARCH_PROJECT_CD} OR
                      B.PROJECT_CD_3 = #{SEARCH_PROJECT_CD} OR
                      B.PROJECT_CD_4 = #{SEARCH_PROJECT_CD} OR
                      B.PROJECT_CD_5 = #{SEARCH_PROJECT_CD} OR
                      B.PROJECT_CD_6 = #{SEARCH_PROJECT_CD} OR
                      B.PROJECT_CD_7 = #{SEARCH_PROJECT_CD} OR
                      B.PROJECT_CD_8 = #{SEARCH_PROJECT_CD} )
              </if>
              <if test="isNotEmpty(SEARCH_TXT)">
                AND A.USER_NICK_NAME LIKE CONCAT('%', #{SEARCH_TXT}, '%')
              </if>
              ORDER BY A.USER_NICK_NAME DESC
           ) B
     ORDER BY RN DESC
   <if test="isNotEmpty(PAGE)">
     LIMIT #{PAGE}, 10
   </if>
  </select>
     <select id="getUserID" parameterType="map" resultType="java.lang.String">
  <![CDATA[
    /* mypage.getUserID */
    SELECT A.USER_ID
      FROM TB_USER_INFO A
     WHERE A.USER_NICK_NAME = #{USER_NICK_NAME}
  ]]>
  </select>
   <select id="getData07" parameterType="map" resultType="hashmap">
  <![CDATA[
    /* mypage.getData07 */
    SELECT A.USER_ID
         , A.USER_NM
         , A.USER_NICK_NAME
         , ( SELECT if(#{LANG}='en',CODE_NM_EN,CODE_NM)
               FROM TB_CODE
              WHERE GROUP_CD = 'USER_TYPE'
                AND CODE_CD = A.USER_TYPE_CD ) AS USER_TYPE_NM
         , A.USER_TYPE_CD
      FROM TB_USER_INFO A
     WHERE A.USER_ID = #{USER_ID}
  ]]>
  </select>
  <select id="getData08" parameterType="map" resultType="hashmap">
  <![CDATA[
    /* mypage.getData08 */
    SELECT A.USER_ID
         , A.TAX_BILL_YN
         , A.INTRO_CONTENT
         , A.PROFILE_FILE_CD
         , A.IMAGE_FILE_CD
         , A.CAREER_CD
         , ( SELECT if(#{LANG}='en',CODE_NM_EN,CODE_NM)
               FROM TB_CODE
              WHERE GROUP_CD = 'CAREER_CD'
                AND CODE_CD = A.CAREER_CD ) AS CAREER_NM
         , A.PROJECT_CD_1
         , ( SELECT if(#{LANG}='en',CODE_NM_EN,CODE_NM)
               FROM TB_CODE
              WHERE GROUP_CD = 'PROJECT_CD'
                AND CODE_CD = A.PROJECT_CD_1 ) AS PROJECT_NM_1
         , A.PROJECT_CD_2
         , ( SELECT if(#{LANG}='en',CODE_NM_EN,CODE_NM)
               FROM TB_CODE
              WHERE GROUP_CD = 'PROJECT_CD'
                AND CODE_CD = A.PROJECT_CD_2 ) AS PROJECT_NM_2
         , A.PROJECT_CD_3
         , ( SELECT if(#{LANG}='en',CODE_NM_EN,CODE_NM)
               FROM TB_CODE
              WHERE GROUP_CD = 'PROJECT_CD'
                AND CODE_CD = A.PROJECT_CD_3 ) AS PROJECT_NM_3
         , A.PROJECT_CD_4
         , ( SELECT if(#{LANG}='en',CODE_NM_EN,CODE_NM)
               FROM TB_CODE
              WHERE GROUP_CD = 'PROJECT_CD'
                AND CODE_CD = A.PROJECT_CD_4 ) AS PROJECT_NM_4
         , A.PROJECT_CD_5
         , ( SELECT if(#{LANG}='en',CODE_NM_EN,CODE_NM)
               FROM TB_CODE
              WHERE GROUP_CD = 'PROJECT_CD'
                AND CODE_CD = A.PROJECT_CD_5 ) AS PROJECT_NM_5
         , A.PROJECT_CD_6
         , ( SELECT if(#{LANG}='en',CODE_NM_EN,CODE_NM)
               FROM TB_CODE
              WHERE GROUP_CD = 'PROJECT_CD'
                AND CODE_CD = A.PROJECT_CD_6 ) AS PROJECT_NM_6
         , A.PROJECT_CD_7
         , ( SELECT if(#{LANG}='en',CODE_NM_EN,CODE_NM)
               FROM TB_CODE
              WHERE GROUP_CD = 'PROJECT_CD'
                AND CODE_CD = A.PROJECT_CD_7 ) AS PROJECT_NM_7
         , A.PROJECT_CD_8
         , A.PROJECT_NM_8
         , B.FILE_NM AS PROFILE_FILE_NM
         , B.FILE_ORIGIN_NM AS PROFILE_FILE_ORIGIN_NM
         , REPLACE(B.FILE_DIRECTORY, '\\', '/') AS PROFILE_FILE_DIRECTORY
         , C.FILE_NM AS IMAGE_FILE_NM
         , C.FILE_ORIGIN_NM AS IMAGE_FILE_ORIGIN_NM
         , REPLACE(C.FILE_DIRECTORY, '\\', '/') AS IMAGE_FILE_DIRECTORY
      FROM TB_USER_INFO_DTL A
      LEFT OUTER JOIN TB_FILE_INFO B
        ON A.PROFILE_FILE_CD = B.FILE_CD
       AND B.FILE_NO = 1
      LEFT OUTER JOIN TB_FILE_INFO C
        ON A.IMAGE_FILE_CD = C.FILE_CD
       AND C.FILE_NO = 1
     WHERE A.USER_ID = #{USER_ID}
  ]]>
  </select>
   <select id="getData09" parameterType="map" resultType="hashmap">
  <![CDATA[
    /* mypage.getData09 */
    SELECT A.USER_ID
         , A.USER_NM
         , A.USER_NICK_NAME
         , @ESTIMATOR_CNT := ( SELECT COUNT(ESTIMATOR_NO)
                                 FROM TB_ESTIMATOR
                                WHERE CREATE_ID = A.USER_ID
                             ) AS ESTIMATOR_CNT
         , @COMPLETE_CNT := ( SELECT COUNT(WR_NO)
                                FROM TB_WRITTEN_REQUEST
                               WHERE CONTRACT_NO IN ( SELECT CONTRACT_NO
                                                        FROM TB_ELECTRONIC_CONTRACT
                                                       WHERE ESTIMATOR_NO IN ( SELECT ESTIMATOR_NO
                                                                                 FROM TB_ESTIMATOR
                                                                                WHERE CREATE_ID = A.USER_ID ) )
                                 AND FILE_RECEIVE_YN = 'Y'
                            ) AS COMPLETE_CNT
         , ( SELECT FORMAT(IFNULL(SUM(LAST_AMOUNT), 0), 0)
               FROM TB_WRITTEN_REQUEST
              WHERE CONTRACT_NO IN ( SELECT CONTRACT_NO
                                       FROM TB_ELECTRONIC_CONTRACT
                                      WHERE ESTIMATOR_NO IN ( SELECT ESTIMATOR_NO
                                                                FROM TB_ESTIMATOR
                                                               WHERE CREATE_ID = A.USER_ID ) )
                AND FILE_RECEIVE_YN = 'Y'
           ) AS COMPLETE_AMOUNT
         , IFNULL(ROUND((@COMPLETE_CNT / @ESTIMATOR_CNT * 100 )), 0) AS COMPLETE_RATIO
         , ( SELECT IFNULL(ROUND(SUM(SCORE)/COUNT(1)),0) AS SOCRE_AVG
               FROM TB_REVIEW
              WHERE PROJECT_NO IN ( SELECT PROJECT_NO
                                      FROM TB_ELECTRONIC_CONTRACT
                                     WHERE CHEESIGNER_ID  = A.USER_ID ) ) AS SCORE_AVG
      FROM TB_USER_INFO A
         , (SELECT @ESTIMATOR_CNT := 0, @COMPLETE_CNT := 0) V_TB
     WHERE A.USER_ID = #{USER_ID}
  ]]>
  </select>
      <select id="getList10" parameterType="map" resultType="hashmap">
  <![CDATA[
    /* review.getList01 */
    SELECT A.REVIEW_NO
         , A.WR_NO
         , A.PROJECT_NO
         , A.SCORE
         , A.REVIEW_CONTENT
         , A.FILE_CD
         , A.CREATE_ID
         , ( SELECT USER_NICK_NAME
               FROM TB_USER_INFO
              WHERE USER_ID = A.CREATE_ID ) AS CREATE_NICK_NAME
         , DATE_FORMAT(A.CREATE_DATE, '%Y-%m-%d') AS CREATE_DATE
         , DATE_FORMAT(A.UPDATE_DATE, '%Y-%m-%d') AS UPDATE_DATE
         , ( SELECT if(#{LANG}='en',CODE_NM_EN,CODE_NM)
               FROM TB_CODE
              WHERE GROUP_CD = 'PROJECT_CD'
                AND CODE_CD = B.PROJECT_CD
           ) AS PROJECT_CD_NM
         , D.FILE_NM
         , D.FILE_ORIGIN_NM
         , REPLACE(D.FILE_DIRECTORY, '\\', '/') AS FILE_DIRECTORY
         , ( SELECT REPLY_CONTENT
               FROM TB_REVIEW_REPLY
              WHERE REVIEW_NO = A.REVIEW_NO
                AND REPLY_NO = 1
           ) AS REPLY_CONTENT
         , C.CHEESIGNER_ID
         , B.TITLE
      FROM TB_REVIEW A
      JOIN TB_PROJECT B
        ON A.PROJECT_NO = B.PROJECT_NO
      JOIN TB_ELECTRONIC_CONTRACT C
        ON A.PROJECT_NO = C.PROJECT_NO
      LEFT OUTER JOIN TB_FILE_INFO D
        ON A.FILE_CD = D.FILE_CD
       AND D.FILE_NO = 1
     WHERE C.CHEESIGNER_ID = #{CREATE_ID} /* 치자이너 */
     ORDER BY A.REVIEW_NO DESC
  ]]>
    <if test="isNotEmpty(PAGE)">
     LIMIT #{PAGE}, 10
    </if>
  </select>
</mapper>