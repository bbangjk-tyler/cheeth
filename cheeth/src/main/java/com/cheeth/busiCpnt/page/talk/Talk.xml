<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="talk">
  
  <select id="getCnt01" parameterType="map" resultType="java.lang.Integer">
  <![CDATA[
    /* talk.getCnt01 */
    SELECT COUNT(TALK_NO) AS CNT
      FROM TB_TALK
     WHERE RECEIVE_ID = #{RECEIVE_ID}
       AND RECEIVE_DEL_YN = 'N'
  ]]>
   <if test="isNotEmpty(TALK_CD)">
     <if test='"N".equals(TALK_CD)'>
       AND RECEIVE_DATE IS NULL
     </if>
     <if test='"R".equals(TALK_CD)'>
       AND RECEIVE_DATE IS NOT NULL
     </if>
   </if>
  </select>
  
  <select id="getCnt02" parameterType="map" resultType="java.lang.Integer">
  <![CDATA[
    /* talk.getCnt02 */
    SELECT COUNT(TALK_NO) AS CNT
      FROM TB_TALK
     WHERE SEND_ID = #{SEND_ID}
       AND SEND_DEL_YN = 'N'
  ]]>
   <if test="isNotEmpty(TALK_CD)">
     <if test='"N".equals(TALK_CD)'>
       AND RECEIVE_DATE IS NULL
     </if>
     <if test='"R".equals(TALK_CD)'>
       AND RECEIVE_DATE IS NOT NULL
     </if>
   </if>
  </select>
  
  <select id="getCnt03" parameterType="map" resultType="java.lang.Integer">
  <![CDATA[
    /* talk.getCnt03 */
    SELECT COUNT(TALK_NO) AS CNT
      FROM TB_TALK
     WHERE RECEIVE_ID = #{RECEIVE_ID}
       AND RECEIVE_DEL_YN = 'N'
  ]]>
  </select>
  
  <select id="getCnt04" parameterType="map" resultType="java.lang.Integer">
  <![CDATA[
    /* talk.getCnt04 */
    SELECT COUNT(TALK_NO) AS CNT
      FROM TB_TALK
     WHERE RECEIVE_ID = #{RECEIVE_ID}
       AND RECEIVE_DEL_YN = 'N'
       AND RECEIVE_DATE IS NULL
  ]]>
  </select>
    <select id="getCnt05" parameterType="map" resultType="java.lang.Integer">
  <![CDATA[
    /* talk.getCnt05 */
    SELECT COUNT(*) AS CNT
      FROM TB_TALK
     WHERE RECEIVE_ID = #{RECEIVE_ID}
       AND RECEIVE_DEL_YN = 'N'
       AND RECEIVE_DATE IS NULL
  ]]>
  </select>
  <select id="getList01" parameterType="map" resultType="hashmap">
  <![CDATA[
    /* talk.getList01 */
    SELECT A.TALK_NO
         , A.SEND_ID
         , ( SELECT USER_NICK_NAME
               FROM TB_USER_INFO
              WHERE USER_ID = A.SEND_ID
           ) AS SEND_NM
         , DATE_FORMAT(A.SEND_DATE, '%y-%m-%d %H:%i') AS SEND_DATE
         , A.SEND_DEL_YN
         , A.RECEIVE_ID
         , ( SELECT USER_NICK_NAME
               FROM TB_USER_INFO
              WHERE USER_ID = A.RECEIVE_ID
           ) AS RECEIVE_NM
         , ( CASE WHEN RECEIVE_DATE IS NULL
                 THEN IF(#{LANG}='en','Unread','읽지않음')
                 ELSE DATE_FORMAT(A.RECEIVE_DATE, '%y-%m-%d %H:%i')
                  END ) AS RECEIVE_DATE
         , A.RECEIVE_DEL_YN
         , A.CONTENT
         , A.FILE_CD
         , ( SELECT COUNT(FILE_CD) AS CNT
               FROM TB_FILE_INFO
              WHERE FILE_CD = A.FILE_CD
           ) AS FILE_CNT
      FROM TB_TALK A
     WHERE A.RECEIVE_ID = #{RECEIVE_ID}
       AND A.RECEIVE_DEL_YN = 'N'
  ]]>
   <if test="isNotEmpty(TALK_CD)">
     <if test='"N".equals(TALK_CD)'>
       AND A.RECEIVE_DATE IS NULL
     </if>
     <if test='"R".equals(TALK_CD)'>
       AND A.RECEIVE_DATE IS NOT NULL
     </if>
   </if>
     ORDER BY A.TALK_NO DESC
   <if test="isNotEmpty(PAGE)">
     LIMIT #{PAGE}, 9
   </if>
  </select>
  
  <select id="getList02" parameterType="map" resultType="hashmap">
  <![CDATA[
    /* talk.getList02 */
    SELECT A.TALK_NO
         , A.SEND_ID
         , ( SELECT USER_NICK_NAME
               FROM TB_USER_INFO
              WHERE USER_ID = A.SEND_ID
           ) AS SEND_NM
         , DATE_FORMAT(A.SEND_DATE, '%y-%m-%d %H:%i') AS SEND_DATE
         , A.SEND_DEL_YN
         , A.RECEIVE_ID
         , ( SELECT USER_NICK_NAME
               FROM TB_USER_INFO
              WHERE USER_ID = A.RECEIVE_ID
           ) AS RECEIVE_NM
         , ( CASE WHEN RECEIVE_DATE IS NULL
                 THEN IF(#{LANG}='en','Unread','읽지않음')
                 ELSE DATE_FORMAT(A.RECEIVE_DATE, '%y-%m-%d %H:%i')
                  END ) AS RECEIVE_DATE
         , A.RECEIVE_DEL_YN
         , A.CONTENT
         , A.FILE_CD
         , ( SELECT COUNT(FILE_CD) AS CNT
               FROM TB_FILE_INFO
              WHERE FILE_CD = A.FILE_CD
           ) AS FILE_CNT
      FROM TB_TALK A
     WHERE A.SEND_ID = #{SEND_ID}
       AND A.SEND_DEL_YN = 'N'
  ]]>
   <if test="isNotEmpty(TALK_CD)">
     <if test='"N".equals(TALK_CD)'>
       AND A.RECEIVE_DATE IS NULL
     </if>
     <if test='"R".equals(TALK_CD)'>
       AND A.RECEIVE_DATE IS NOT NULL
     </if>
   </if>
     ORDER BY A.TALK_NO DESC
   <if test="isNotEmpty(PAGE)">
     LIMIT #{PAGE}, 9
   </if>
  </select>
  
  <select id="getData03" parameterType="map" resultType="hashmap">
  <![CDATA[
    /* talk.getData03 */
    SELECT A.TALK_NO
         , A.SEND_ID
         , ( SELECT USER_NICK_NAME
               FROM TB_USER_INFO
              WHERE USER_ID = A.SEND_ID
           ) AS SEND_NM
         , DATE_FORMAT(A.SEND_DATE, '%y-%m-%d %H:%i') AS SEND_DATE
         , A.SEND_DEL_YN
         , A.RECEIVE_ID
         , ( SELECT USER_NICK_NAME
               FROM TB_USER_INFO
              WHERE USER_ID = A.RECEIVE_ID
           ) AS RECEIVE_NM
         , ( CASE WHEN RECEIVE_DATE IS NULL
                 THEN IF(#{LANG}='en','Unread','읽지않음')
                 ELSE DATE_FORMAT(A.RECEIVE_DATE, '%y-%m-%d %H:%i')
                  END ) AS RECEIVE_DATE
         , A.RECEIVE_DEL_YN
         , A.CONTENT
         , A.FILE_CD
         , ( SELECT COUNT(FILE_CD) AS CNT
               FROM TB_FILE_INFO
              WHERE FILE_CD = A.FILE_CD
           ) AS FILE_CNT
      FROM TB_TALK A
     WHERE A.RECEIVE_ID = #{RECEIVE_ID}
       AND A.RECEIVE_DEL_YN = 'N'
       AND A.TALK_NO = #{TALK_NO}
  ]]>
  </select>
  
  <select id="getData04" parameterType="map" resultType="hashmap">
  <![CDATA[
    /* talk.getData04 */
    SELECT A.TALK_NO
         , A.SEND_ID
         , ( SELECT USER_NICK_NAME
               FROM TB_USER_INFO
              WHERE USER_ID = A.SEND_ID
           ) AS SEND_NM
         , DATE_FORMAT(A.SEND_DATE, '%y-%m-%d %H:%i') AS SEND_DATE
         , A.SEND_DEL_YN
         , A.RECEIVE_ID
         , ( SELECT USER_NICK_NAME
               FROM TB_USER_INFO
              WHERE USER_ID = A.RECEIVE_ID
           ) AS RECEIVE_NM
         , ( CASE WHEN RECEIVE_DATE IS NULL
                 THEN IF(#{LANG}='en','Unread','읽지않음')
                 ELSE DATE_FORMAT(A.RECEIVE_DATE, '%y-%m-%d %H:%i')
                  END ) AS RECEIVE_DATE
         , A.RECEIVE_DEL_YN
         , A.CONTENT
         , A.FILE_CD
         , ( SELECT COUNT(FILE_CD) AS CNT
               FROM TB_FILE_INFO
              WHERE FILE_CD = A.FILE_CD
           ) AS FILE_CNT
      FROM TB_TALK A
     WHERE A.SEND_ID = #{SEND_ID}
       AND A.SEND_DEL_YN = 'N'
       AND A.TALK_NO = #{TALK_NO}
  ]]>
  </select>
  
  <select id="getUserList" parameterType="map" resultType="hashmap">
  <![CDATA[
    /* talk.getUserList */
    SELECT A.USER_ID
         , A.USER_PW
         , A.USER_TYPE_CD
         , A.USER_NM
         , A.USER_PHONE
         , A.AUTH_NO
         , A.USER_ZIP_CD
         , A.USER_ADDRESS
         , A.USER_ADDRESS_DTL
         , A.USER_NICK_NAME
         , A.COMP_GROUP_NM
         , A.COMP_GROUP_CD
         , A.COMP_NO
         , A.COMP_NAME
         , A.COMP_ZIP_CD
         , A.COMP_ADDRESS
         , A.COMP_ADDRESS_DTL
         , A.COMP_FILE_CD
         , A.JOB_CD
         , A.LICENSE_NO
         , A.LICENSE_FILE_CD
         , A.BANK_CD
         , A.ACCOUNT_NM
         , A.ACCOUNT_NO
         , A.CREATE_ID
         , A.CREATE_DATE
         , A.UPDATE_ID
         , A.UPDATE_DATE
      FROM TB_USER_INFO A
         , ( SELECT CREATE_ID
                  , CHEESIGNER_ID 
               FROM TB_ELECTRONIC_CONTRACT
              WHERE CHEESIGNER_ID = #{USER_ID}
              GROUP BY CHEESIGNER_ID, CREATE_ID ) B
     WHERE A.USER_ID = B.CREATE_ID
       AND A.USER_ID NOT IN(#{USER_ID})
     UNION
    SELECT A.USER_ID
         , A.USER_PW
         , A.USER_TYPE_CD
         , A.USER_NM
         , A.USER_PHONE
         , A.AUTH_NO
         , A.USER_ZIP_CD
         , A.USER_ADDRESS
         , A.USER_ADDRESS_DTL
         , A.USER_NICK_NAME
         , A.COMP_GROUP_NM
         , A.COMP_GROUP_CD
         , A.COMP_NO
         , A.COMP_NAME
         , A.COMP_ZIP_CD
         , A.COMP_ADDRESS
         , A.COMP_ADDRESS_DTL
         , A.COMP_FILE_CD
         , A.JOB_CD
         , A.LICENSE_NO
         , A.LICENSE_FILE_CD
         , A.BANK_CD
         , A.ACCOUNT_NM
         , A.ACCOUNT_NO
         , A.CREATE_ID
         , A.CREATE_DATE
         , A.UPDATE_ID
         , A.UPDATE_DATE
      FROM TB_USER_INFO A
         , ( SELECT CREATE_ID
                  , CHEESIGNER_ID
               FROM TB_ELECTRONIC_CONTRACT
              WHERE CREATE_ID = #{USER_ID}
              GROUP BY CHEESIGNER_ID, CREATE_ID ) B
     WHERE A.USER_ID = B.CHEESIGNER_ID
       AND A.USER_ID NOT IN( #{USER_ID} )
	  ]]>
  </select>
  
  <insert id="insert01" parameterType="map">
  <![CDATA[
    /* talk.insert01 */
    INSERT INTO TB_TALK (
      SEND_ID
    , SEND_DATE
    , SEND_DEL_YN
    , RECEIVE_ID
    , RECEIVE_DATE
    , RECEIVE_DEL_YN
    , CONTENT
    , FILE_CD
    , CREATE_ID
    , CREATE_DATE
    , UPDATE_ID
    , UPDATE_DATE
  ) VALUES (
      #{SEND_ID}
    , NOW()
    , 'N'
    , #{RECEIVE_ID}
    , NULL
    , 'N'
    , #{CONTENT}
    , #{FILE_CD}
    , #{CREATE_ID}
    , NOW()
    , #{UPDATE_ID}
    , NOW()
  )
  ]]>
  </insert>
  
  <update id="update01" parameterType="map">
  <![CDATA[
    /* talk.update01 */
    UPDATE TB_TALK
       SET RECEIVE_DEL_YN = 'Y'
         , UPDATE_ID = #{RECEIVE_ID}
         , UPDATE_DATE = NOW()
     WHERE TALK_NO = #{TALK_NO}
       AND RECEIVE_ID = #{RECEIVE_ID}
  ]]>
  </update>
  
  <update id="update02" parameterType="map">
  <![CDATA[
    /* talk.update02 */
    UPDATE TB_TALK
       SET SEND_DEL_YN = 'Y'
         , UPDATE_ID = #{SEND_ID}
         , UPDATE_DATE = NOW()
     WHERE TALK_NO = #{TALK_NO}
       AND SEND_ID = #{SEND_ID}
  ]]>
  </update>
  
  <update id="update03" parameterType="map">
  <![CDATA[
    /* talk.update03 */
    UPDATE TB_TALK
       SET RECEIVE_DATE = NOW()
         , UPDATE_ID = #{RECEIVE_ID}
         , UPDATE_DATE = NOW()
     WHERE TALK_NO = #{TALK_NO}
       AND RECEIVE_ID = #{RECEIVE_ID}
  ]]>
  </update>
  
</mapper>